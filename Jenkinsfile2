pipeline {
agent any
  tools {
    maven "maven-yaya"
  }
  stages {
    
    stage ('Maven Clean'){
      when {
       anyOf {
        changeset "src/**"
        changeset "Jenkinsfile**"
    }
    }
      steps{
        sh 'mvn clean'
      }
    }
    stage ('Maven package code') {
      when {
       anyOf {
        changeset "src/**"
        changeset "Jenkinsfile**"
    }
}
      steps{
        sh 'mvn package'
      }
    }
    stage ('Sonarqube code analysis and tesing'){
      when {
       anyOf {
        changeset "src/**"
        changeset "Jenkinsfile**"
    }
}
      steps{
        script{
          withSonarQubeEnv('sonarserver'){
            sh 'mvn clean package sonar:sonar'
          }
        }
      }
    }    
    stage ("Quality Gate") {
      when {
       anyOf {
        changeset "src/**"
       changeset "Jenkinsfile**"
    }
 }
      steps {
        script {
           timeout(time: 1, unit: 'HOURS') { 
        def qg = waitForQualityGate() 
        if (qg.status != 'OK') {
             error "Pipeline aborted due to quality gate failure: ${qg.status}"
        }
           }
        }
      }
    }
    stage ('Docker build and push'){
    when {
      anyOf {
        changeset "src/**"
        changeset "Jenkinsfile**"
    }
    }
           steps{
             withDockerRegistry([ credentialsId: "Docker_creds", url: "https://index.docker.io/v1/" ]){
               sh 'docker build -t devopstrainingschool/knote-jenkins:$BUILD_NUMBER . -f Dockerfile'
               sh 'docker push devopstrainingschool/knote-jenkins:$BUILD_NUMBER'
             }
           }
    }
    
    
    
    
    
    
    
  }
}

